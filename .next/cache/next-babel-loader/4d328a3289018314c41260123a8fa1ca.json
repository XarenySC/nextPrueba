{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nexport default class Rickmorty extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      characters: [],\n      cargando: true\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\").then(res => res.json()).then(characters => {\n      this.setState({\n        characters: characters.results,\n        cargando: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.cargando) {\n      return __jsx(\"h1\", null, \"Cargando...\");\n    }\n\n    return __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"h1\", null, \"Peticiones HTTP\"), __jsx(\"div\", {\n      className: \"row\"\n    }, this.state.characters.map(character => {\n      return __jsx(\"div\", {\n        className: \"col-sm-12 col-md-4\",\n        key: character.id\n      }, __jsx(\"img\", {\n        src: character.image,\n        alt: character.name\n      }), __jsx(\"span\", null, \"Nombre: \"), character.name, \" \", __jsx(\"br\", null), __jsx(\"span\", null, \"Status: \"), character.status, __jsx(\"br\", null), __jsx(\"span\", null, \"Especie: \"), character.species, __jsx(\"br\", null), __jsx(\"br\", null));\n    }), \"  \"));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}