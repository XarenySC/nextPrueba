{"ast":null,"code":"var _jsxFileName = \"/Users/SALCO/Desktop/nextPrueba/Components/Rickmorty.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport './css/bootstrap.min.css';\nexport default class Rickmorty extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      characters: [],\n      cargando: true\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\").then(res => res.json()).then(characters => {\n      this.setState({\n        characters: characters.results,\n        cargando: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.cargando) {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 14\n        }\n      }, \"Cargando...\");\n    }\n\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Peticiones HTTP\"), this.state.characters.map(character => {\n      return __jsx(\"div\", {\n        className: \"col-sm-12 col-md-4\",\n        key: character.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        src: character.image,\n        alt: character.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, \"Nombre: \"), character.name, \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 32\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, \"Status: \"), character.status, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, \"Especie: \"), character.species, __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/SALCO/Desktop/nextPrueba/Components/Rickmorty.js"],"names":["React","Component","Rickmorty","characters","cargando","componentDidMount","fetch","then","res","json","setState","results","render","state","map","character","id","image","name","status","species"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACvC;AACNE,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADuC;AAAA;;AAM/CC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQJ,UAAU,IAAI;AAClB,WAAKO,QAAL,CAAc;AACZP,QAAAA,UAAU,EAAEA,UAAU,CAACQ,OADX;AAEZP,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KAPH;AAQD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWT,QAAf,EAAyB;AACvB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEG,KAAKS,KAAL,CAAWV,UAAX,CAAsBW,GAAtB,CAA0BC,SAAS,IAAI;AACtC,aACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAEA,SAAS,CAACC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAED,SAAS,CAACE,KAApB;AAA2B,QAAA,GAAG,EAAEF,SAAS,CAACG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGH,SAAS,CAACG,IAHb,OAGmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHnB,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKGH,SAAS,CAACI,MALb,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQGJ,SAAS,CAACK,OARb,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD,KAfA,CAFH,CADF;AAqBD;;AA3C8C","sourcesContent":["import React, { Component } from \"react\";\nimport './css/bootstrap.min.css'\nexport default class Rickmorty extends Component {\n  state = {\n    characters: [],\n    cargando: true\n  };\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then(res => res.json())\n      .then(characters => {\n        this.setState({\n          characters: characters.results,\n          cargando: false\n        });\n      });\n  }\n\n  render() {\n    if (this.state.cargando) {\n      return <h1>Cargando...</h1>;\n    }\n\n    return (\n      <div className=\"container\">\n        <h1>Peticiones HTTP</h1>\n        {this.state.characters.map(character => {\n          return (\n            <div className=\"col-sm-12 col-md-4\" key={character.id}>\n              <img src={character.image} alt={character.name} />\n              <span>Nombre: </span>\n              {character.name} <br />\n              <span>Status: </span>\n              {character.status}\n              <br />\n              <span>Especie: </span>\n              {character.species}\n              <br />\n              <br />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}