{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/SALCO/Desktop/nextPrueba/Components/Rickmorty.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\n\nvar Rickmorty = /*#__PURE__*/function (_Component) {\n  _inherits(Rickmorty, _Component);\n\n  var _super = _createSuper(Rickmorty);\n\n  function Rickmorty() {\n    var _this;\n\n    _classCallCheck(this, Rickmorty);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      characters: [],\n      cargando: true\n    });\n\n    return _this;\n  }\n\n  _createClass(Rickmorty, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://rickandmortyapi.com/api/character/\").then(function (res) {\n        return res.json();\n      }).then(function (characters) {\n        _this2.setState({\n          characters: characters.results,\n          cargando: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.cargando) {\n        return __jsx(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 14\n          }\n        }, \"Cargando...\");\n      }\n\n      return __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \"Peticiones HTTP\"), __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }), this.state.characters.map(function (character) {\n        return __jsx(\"div\", {\n          className: \"col-sm-12 col-md-4\",\n          key: character.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, __jsx(\"img\", {\n          src: character.image,\n          alt: character.name,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }\n        }), __jsx(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, \"Nombre: \"), character.name, \" \", __jsx(\"br\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 32\n          }\n        }), __jsx(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, \"Status: \"), character.status, __jsx(\"br\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }\n        }), __jsx(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }\n        }, \"Especie: \"), character.species, __jsx(\"br\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }\n        }), __jsx(\"br\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return Rickmorty;\n}(Component);\n\nexport { Rickmorty as default };","map":{"version":3,"sources":["/Users/SALCO/Desktop/nextPrueba/Components/Rickmorty.js"],"names":["React","Component","Rickmorty","characters","cargando","fetch","then","res","json","setState","results","state","map","character","id","image","name","status","species"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IACqBC,S;;;;;;;;;;;;;;;;4DACX;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;;;;;;wCAKY;AAAA;;AAClBC,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAH,UAAU,EAAI;AAClB,QAAA,MAAI,CAACM,QAAL,CAAc;AACZN,UAAAA,UAAU,EAAEA,UAAU,CAACO,OADX;AAEZN,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OAPH;AAQD;;;6BAEQ;AAAA;;AACP,UAAI,KAAKO,KAAL,CAAWP,QAAf,EAAyB;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKO,KAAL,CAAWR,UAAX,CAAsBS,GAAtB,CAA0B,UAAAC,SAAS,EAAI;AACtC,eACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAoC,UAAA,GAAG,EAAEA,SAAS,CAACC,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAED,SAAS,CAACE,KAApB;AAA2B,UAAA,GAAG,EAAEF,SAAS,CAACG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGGH,SAAS,CAACG,IAHb,OAGmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHnB,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKGH,SAAS,CAACI,MALb,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAQGJ,SAAS,CAACK,OARb,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVF,CADF;AAcD,OAfA,CAHH,CADF;AAsBD;;;;EA5CoCjB,S;;SAAlBC,S","sourcesContent":["import React, { Component } from \"react\";\nexport default class Rickmorty extends Component {\n  state = {\n    characters: [],\n    cargando: true\n  };\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then(res => res.json())\n      .then(characters => {\n        this.setState({\n          characters: characters.results,\n          cargando: false\n        });\n      });\n  }\n\n  render() {\n    if (this.state.cargando) {\n      return <h1>Cargando...</h1>;\n    }\n\n    return (\n      <div className=\"container\">\n        <h1>Peticiones HTTP</h1>\n        <div className=\"row\"></div>\n        {this.state.characters.map(character => {\n          return (\n            <div className=\"col-sm-12 col-md-4\" key={character.id}>\n              <img src={character.image} alt={character.name} />\n              <span>Nombre: </span>\n              {character.name} <br />\n              <span>Status: </span>\n              {character.status}\n              <br />\n              <span>Especie: </span>\n              {character.species}\n              <br />\n              <br />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}