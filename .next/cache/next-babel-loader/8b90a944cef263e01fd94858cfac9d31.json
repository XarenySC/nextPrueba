{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nvar Rickmorty = /*#__PURE__*/function (_Component) {\n  _inherits(Rickmorty, _Component);\n\n  var _super = _createSuper(Rickmorty);\n\n  function Rickmorty() {\n    var _this;\n\n    _classCallCheck(this, Rickmorty);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      characters: [],\n      cargando: true\n    });\n\n    return _this;\n  }\n\n  _createClass(Rickmorty, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://rickandmortyapi.com/api/character/\").then(function (res) {\n        return res.json();\n      }).then(function (characters) {\n        _this2.setState({\n          characters: characters.results,\n          cargando: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.cargando) {\n        return __jsx(\"h1\", null, \"Cargando...\");\n      }\n\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"h1\", null, \"Peticiones HTTP\"), __jsx(\"div\", {\n        className: \"row\"\n      }, this.state.characters.map(function (character) {\n        return __jsx(\"div\", {\n          className: \"col-sm-12 col-md-4\",\n          key: character.id\n        }, __jsx(\"img\", {\n          src: character.image,\n          alt: character.name\n        }), __jsx(\"span\", null, \"Nombre: \"), character.name, \" \", __jsx(\"br\", null), __jsx(\"span\", null, \"Status: \"), character.status, __jsx(\"br\", null), __jsx(\"span\", null, \"Especie: \"), character.species, __jsx(\"br\", null), __jsx(\"br\", null));\n      }), \"  \"));\n    }\n  }]);\n\n  return Rickmorty;\n}(Component);\n\nexport { Rickmorty as default };","map":null,"metadata":{},"sourceType":"module"}